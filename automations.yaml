- id: led_state
  alias: 'MQTT LED state'
  trigger:
    platform: mqtt
    topic: "luz/status"
  action:
    - service: persistent_notification.create
      data:
        message: 'Message Payload on luz/status: {{ states.sensor.luz.state }}'
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.successful_command



- id: led_availability
  alias: 'MQTT LED availability'
  trigger:
    platform: mqtt
    topic: "luz/available"
  action:
    - service: persistent_notification.create
      data:
        message: 'Message Payload on luz/available: {{ trigger.event }}'



- id: command_success
  alias: 'command success automation'
  trigger:
    - platform: state
      entity_id: input_boolean.successful_command
      from: 'off'
      to: 'on'
  action:
    - service: tts.google_say
      entity_id: media_player.speaker_1
      data_template: 
        message: 'Seu desejo é uma ordem!'
    - delay: '00:00:05'
    - service: python_script.espeak_success
    - delay: '00:00:10'
    - service: python_script.espeak_tts
      data_template:
        {'message': 'Seu desejo é uma ordem!'}
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.successful_command
    - service: persistent_notification.create
      data:
        message: 'Command Success turned off'
